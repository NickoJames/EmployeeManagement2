// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecordManagement.Infrastructure.Common.Persistence;

#nullable disable

namespace RecordManagement.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20240704023301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("RecordManagement.Domain.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("RecordManagement.Domain.Employees.Employee", b =>
                {
                    b.OwnsOne("RecordManagement.Domain.ContactInformations.ContactInformation", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("EmailAddress");

                            b1.Property<string>("MobileNumber")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("MobileNumber");

                            b1.Property<string>("PermanentAddress")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("PermanentAddress");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("PhoneNumber");

                            b1.Property<string>("PresentAddress")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("PresentAddress");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("RecordManagement.Domain.Educationalbackgrounds.EducationalBackground", "EducationalBackgrounds", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT")
                                .HasColumnName("EducationalBackgroundId");

                            b1.Property<string>("Degree")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Degree");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("School")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("School");

                            b1.Property<int>("YearGraduated")
                                .HasColumnType("INTEGER")
                                .HasColumnName("YearGraduated");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("EducationalBackgrounds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("RecordManagement.Domain.EmploymentHistories.EmploymentHistory", "EmploymentHistories", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Employer")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Employer");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("EndDate");

                            b1.Property<string>("Position")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Position");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("StartDate");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("EmploymentHistories", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("RecordManagement.Domain.PersonalInformations.PersonalInformation", "PersonalInfo", b1 =>
                        {
                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("BloodType")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("BloodType");

                            b1.Property<string>("Citizenship")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Citizenship");

                            b1.Property<string>("CivilStatus")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("CivilStatus");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("TEXT")
                                .HasColumnName("DateOfBirth");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("FirstName");

                            b1.Property<string>("Gender")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Gender");

                            b1.Property<int>("Height")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Height");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LastName");

                            b1.Property<string>("MidlleName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("MiddleName");

                            b1.Property<string>("PlaceOfBirth")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("PlaceOfBirth");

                            b1.Property<int>("Weight")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Weight");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("RecordManagement.Domain.References.Reference", "References", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ContactInformation")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("ContactInformation");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Name");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("References", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsMany("RecordManagement.Domain.SkillsAndQualifications.SkillsAndQualification", "SkillsAndQualifications", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Language");

                            b1.Property<string>("Skill")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Skill");

                            b1.HasKey("Id");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("Skills", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("EducationalBackgrounds");

                    b.Navigation("EmploymentHistories");

                    b.Navigation("PersonalInfo")
                        .IsRequired();

                    b.Navigation("References");

                    b.Navigation("SkillsAndQualifications");
                });
#pragma warning restore 612, 618
        }
    }
}
